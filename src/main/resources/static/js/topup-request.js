/**
 * JavaScript –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç—ã
 */

document.addEventListener('DOMContentLoaded', function() {
    initializeTopupRequestButtons();
});

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
 */
function initializeTopupRequestButtons() {
    const topupRequestButtons = document.querySelectorAll('.request-topup-btn');
    topupRequestButtons.forEach(button => {
        button.addEventListener('click', function() {
            const cardId = this.getAttribute('data-card-id');
            const cardNumber = this.getAttribute('data-card-number');
            const cardBalance = this.getAttribute('data-card-balance');
            console.log('Topup request button clicked for card:', cardId);
            showTopupRequestModal(cardId, cardNumber, cardBalance);
        });
    });
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
 */
function showTopupRequestModal(cardId, cardNumber, cardBalance) {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    const existingModals = document.querySelectorAll('.modal-overlay');
    existingModals.forEach(modal => {
        if (modal.querySelector('#topupAmount')) {
            document.body.removeChild(modal);
        }
    });
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.innerHTML = `
        <div class="modal-content">
            <div class="modal-header">
                <h3>üí∞ –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã</h3>
                <button type="button" class="modal-close" onclick="closeTopupRequestModal()">&times;</button>
            </div>
            <div class="modal-body">
                <p>–ö–∞—Ä—Ç–∞: <strong>${cardNumber}</strong></p>
                <p>–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: <strong>${parseFloat(cardBalance).toFixed(2)} ‚ÇΩ</strong></p>
                <form id="topupRequestForm">
                    <div class="form-group">
                        <label for="topupRequestAmount">–°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:</label>
                        <input type="number" id="topupRequestAmount" name="amount" step="0.01" min="0.01" required placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É" value="">
                        <small class="form-help">–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 0.01 ‚ÇΩ</small>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeTopupRequestModal()">–û—Ç–º–µ–Ω–∞</button>
                <button type="button" class="btn btn-primary" onclick="submitTopupRequest(${cardId})">–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ
    console.log('Modal created and added to DOM');
    console.log('Modal element:', modal);
    console.log('Input element in modal:', modal.querySelector('#topupAmount'));
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    setTimeout(() => {
        modal.classList.add('show');
        console.log('Modal shown');
    }, 10);
}

/**
 * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
 */
function closeTopupRequestModal() {
    const modals = document.querySelectorAll('.modal-overlay');
    modals.forEach(modal => {
        if (modal.querySelector('#topupRequestAmount') || modal.querySelector('#topupAmount')) {
            modal.classList.remove('show');
            setTimeout(() => {
                if (document.body.contains(modal)) {
                    document.body.removeChild(modal);
                }
            }, 300);
        }
    });
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
 */
function submitTopupRequest(cardId) {
    console.log('Topup request - cardId:', cardId);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
    const amountInput = document.querySelector('#topupRequestAmount') || 
                       document.querySelector('#topupAmount') ||
                       document.querySelector('input[type="number"]') ||
                       document.querySelector('input[name="amount"]');
    
    console.log('Topup request - amountInput element:', amountInput);
    console.log('Topup request - all number inputs:', document.querySelectorAll('input[type="number"]'));
    console.log('Topup request - all inputs in modal:', document.querySelectorAll('.modal-overlay input'));
    console.log('Topup request - modal overlay exists:', document.querySelector('.modal-overlay'));
    console.log('Topup request - all inputs on page:', document.querySelectorAll('input'));
    
    if (!amountInput) {
        console.log('Error: Amount input not found');
        showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', 'error');
        return;
    }
    
    const amountValue = amountInput.value.trim();
    console.log('Topup request - amountValue:', amountValue);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª–µ –Ω–µ –ø—É—Å—Ç–æ–µ
    if (!amountValue) {
        console.log('Error: Empty amount value');
        showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É', 'error');
        return;
    }
    
    const amount = parseFloat(amountValue);
    console.log('Topup request - parsed amount:', amount);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ
    if (isNaN(amount) || amount <= 0) {
        console.log('Error: Invalid amount:', amount);
        showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–±–æ–ª—å—à–µ 0)', 'error');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É
    if (amount < 0.01) {
        console.log('Error: Amount too small:', amount);
        showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: 0.01 ‚ÇΩ', 'error');
        return;
    }
    
    console.log('Topup request - sending amount:', amount);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    fetch(`/cards/${cardId}/request-topup`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `amount=${amount}`
    })
    .then(response => {
        console.log('Topup request - response status:', response.status);
        if (response.ok) {
            return response.text();
        } else {
            return response.text().then(text => {
                console.log('Topup request - error response:', text);
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: ' + text);
            });
        }
    })
    .then(message => {
        console.log('Topup request - success message:', message);
        showCustomNotification('‚úÖ –£—Å–ø–µ—Ö', message, 'success');
        closeTopupRequestModal();
        
        // –ò–∑–º–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ "–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
        const button = document.querySelector(`.request-topup-btn[data-card-id="${cardId}"]`);
        if (button) {
            button.textContent = '–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω';
            button.disabled = true;
            button.classList.remove('btn-primary');
            button.classList.add('btn-secondary');
        }
    })
    .catch(error => {
        console.log('Topup request - error:', error);
        showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: ' + error.message, 'error');
    });
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('modal-overlay')) {
        const modal = e.target;
        if (modal.querySelector('#topupRequestAmount') || modal.querySelector('#topupAmount')) {
            closeTopupRequestModal();
        }
    }
});
