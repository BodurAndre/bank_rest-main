/**
 * JavaScript –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏
 */

document.addEventListener('DOMContentLoaded', function() {
    initializeRequestBlockButtons();
});

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –∑–∞–ø—Ä–æ—Å–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
 */
function initializeRequestBlockButtons() {
    const requestBlockButtons = document.querySelectorAll('.request-block-btn');
    requestBlockButtons.forEach(button => {
        button.addEventListener('click', function() {
            const cardId = this.getAttribute('data-card-id');
            console.log('Request block button clicked for card:', cardId);
            requestCardBlock(cardId);
        });
    });
}

/**
 * –ó–∞–ø—Ä–æ—Å –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∫–∞—Ä—Ç—ã
 */
function requestCardBlock(cardId) {
    console.log('requestCardBlock called with cardId:', cardId);
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–∏—á–∏–Ω—ã
    showBlockRequestModal(cardId);
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
 */
function showBlockRequestModal(cardId) {
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.innerHTML = `
        <div class="modal-content">
            <div class="modal-header">
                <h3>üîí –ó–∞–ø—Ä–æ—Å –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∫–∞—Ä—Ç—ã</h3>
                <button type="button" class="modal-close" onclick="closeBlockRequestModal()">&times;</button>
            </div>
            <div class="modal-body">
                <p>–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–∞—Ä—Ç—ã:</p>
                <form id="blockRequestForm">
                    <div class="form-group">
                        <label for="blockReason">–ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:</label>
                        <select id="blockReason" required>
                            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É</option>
                            <option value="–£—Ç–µ—Ä—è–Ω–∞ –∫–∞—Ä—Ç–∞">–£—Ç–µ—Ä—è–Ω–∞ –∫–∞—Ä—Ç–∞</option>
                            <option value="–ö—Ä–∞–∂–∞ –∫–∞—Ä—Ç—ã">–ö—Ä–∞–∂–∞ –∫–∞—Ä—Ç—ã</option>
                            <option value="–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏">–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</option>
                            <option value="–°–º–µ–Ω–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞">–°–º–µ–Ω–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞</option>
                            <option value="–î—Ä—É–≥–æ–µ">–î—Ä—É–≥–æ–µ</option>
                        </select>
                    </div>
                    <div class="form-group" id="customReasonGroup" style="display: none;">
                        <label for="customReason">–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É:</label>
                        <input type="text" id="customReason" placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeBlockRequestModal()">–û—Ç–º–µ–Ω–∞</button>
                <button type="button" class="btn btn-warning" onclick="submitBlockRequest(${cardId})">–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å</button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    setTimeout(() => {
        modal.classList.add('show');
    }, 10);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–∏—á–∏–Ω—ã
    const reasonSelect = modal.querySelector('#blockReason');
    const customReasonGroup = modal.querySelector('#customReasonGroup');
    const customReasonInput = modal.querySelector('#customReason');
    
    reasonSelect.addEventListener('change', function() {
        if (this.value === '–î—Ä—É–≥–æ–µ') {
            customReasonGroup.style.display = 'block';
            customReasonInput.required = true;
        } else {
            customReasonGroup.style.display = 'none';
            customReasonInput.required = false;
        }
    });
}

/**
 * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–ø—Ä–æ—Å–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
 */
function closeBlockRequestModal() {
    const modal = document.querySelector('.modal-overlay');
    if (modal) {
        modal.classList.remove('show');
        setTimeout(() => {
            document.body.removeChild(modal);
        }, 300);
    }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∫–∞—Ä—Ç—ã
 */
function submitBlockRequest(cardId) {
    console.log('submitBlockRequest called with cardId:', cardId);
    const reasonSelect = document.querySelector('#blockReason');
    const customReason = document.querySelector('#customReason');
    
    let reason = reasonSelect.value;
    
    if (reason === '–î—Ä—É–≥–æ–µ') {
        if (!customReason.value.trim()) {
            showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏', 'error');
            return;
        }
        reason = customReason.value.trim();
    }
    
    if (!reason) {
        showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏', 'error');
        return;
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    fetch(`/cards/${cardId}/request-block`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `reason=${encodeURIComponent(reason)}`
    })
    .then(response => {
        if (response.ok) {
            return response.text();
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞');
        }
    })
    .then(message => {
        showCustomNotification('‚úÖ –£—Å–ø–µ—Ö', message, 'success');
        closeBlockRequestModal();
        
        // –ò–∑–º–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ "–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
        const button = document.querySelector(`.request-block-btn[data-card-id="${cardId}"]`);
        console.log('Looking for button with cardId:', cardId);
        console.log('Found button:', button);
        
        if (button) {
            button.textContent = '–ó–∞–ø—Ä–æ—Å –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω';
            button.disabled = true;
            button.classList.remove('btn-warning');
            button.classList.add('btn-secondary');
            console.log('Button updated successfully');
        } else {
            console.log('Button not found!');
        }
        
        // –£–±–∏—Ä–∞–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç, —Ç–∞–∫ –∫–∞–∫ —Å—Ç–∞—Ç—É—Å —Ç–µ–ø–µ—Ä—å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ë–î
        // setTimeout(() => {
        //     window.location.reload();
        // }, 1500);
    })
    .catch(error => {
        showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: ' + error.message, 'error');
    });
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('modal-overlay')) {
        closeBlockRequestModal();
    }
});
