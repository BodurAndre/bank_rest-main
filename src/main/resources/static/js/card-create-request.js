/**
 * JavaScript –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞—Ä—Ç—ã
 */

document.addEventListener('DOMContentLoaded', function() {
    initializeRequestCardButtons();
});

function generateExpiryDateOptions() {
    const now = new Date();
    const currentMonth = now.getMonth() + 1; // getMonth() returns 0-11, so add 1
    const currentYear = now.getFullYear();
    
    // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ 2 –≥–æ–¥–∞
    const startYear = currentYear + 2;
    const endYear = startYear + 3; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º 4 –≥–æ–¥–∞ –≤–ø–µ—Ä–µ–¥
    
    let options = '';
    
    for (let year = startYear; year <= endYear; year++) {
        const shortYear = year.toString().slice(-2); // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 2 —Ü–∏—Ñ—Ä—ã –≥–æ–¥–∞
        const monthStr = currentMonth.toString().padStart(2, '0'); // –î–æ–±–∞–≤–ª—è–µ–º 0 –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        const yearsFromNow = year - currentYear;
        options += `<option value="${monthStr}/${shortYear}">${monthStr}/${shortYear} (${yearsFromNow} ${yearsFromNow === 1 ? '–≥–æ–¥' : yearsFromNow < 5 ? '–≥–æ–¥–∞' : '–ª–µ—Ç'})</option>`;
    }
    
    return options;
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –∑–∞–ø—Ä–æ—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
 */
function initializeRequestCardButtons() {
    const requestCardButtons = document.querySelectorAll('.request-card-btn');
    requestCardButtons.forEach(button => {
        button.addEventListener('click', function() {
            showCardCreateRequestModal();
        });
    });
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–ø—Ä–æ—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
 */
function showCardCreateRequestModal() {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    const existingModals = document.querySelectorAll('.modal-overlay');
    existingModals.forEach(modal => {
        if (modal.querySelector('#cardExpiryDate')) {
            document.body.removeChild(modal);
        }
    });

    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.innerHTML = `
        <div class="modal-content">
            <div class="modal-header">
                <h3>‚ûï –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã</h3>
                <button type="button" class="modal-close" onclick="closeCardCreateRequestModal()">&times;</button>
            </div>
            <div class="modal-body">
                <p>–í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã?</p>
                <div class="form-group">
                    <label for="cardExpiryDate">–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–∞—Ä—Ç—ã:</label>
                    <select id="cardExpiryDate" name="expiryDate" required>
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è</option>
                        ${generateExpiryDateOptions()}
                    </select>
                </div>
                <p class="modal-info">
                    ‚ÑπÔ∏è –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –µ–≥–æ –∏ —Å–æ–∑–¥–∞—Å—Ç –∫–∞—Ä—Ç—É.
                    –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ.
                </p>
            </div>
            <div class="modal-actions">
                <button type="button" class="btn btn-success" onclick="submitCardCreateRequest()">
                    ‚úÖ –î–∞, —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å
                </button>
                <button type="button" class="btn btn-secondary" onclick="closeCardCreateRequestModal()">
                    ‚ùå –û—Ç–º–µ–Ω–∞
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    setTimeout(() => {
        modal.classList.add('show');
    }, 10);
}

/**
 * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–ø—Ä–æ—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
 */
function closeCardCreateRequestModal() {
    const modal = document.querySelector('.modal-overlay');
    if (modal) {
        modal.classList.remove('show');
        setTimeout(() => {
            if (document.body.contains(modal)) {
                document.body.removeChild(modal);
            }
        }, 300);
    }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
 */
function submitCardCreateRequest() {
    const expiryDateSelect = document.querySelector('#cardExpiryDate');
    
    if (!expiryDateSelect || !expiryDateSelect.value) {
        showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–∞—Ä—Ç—ã', 'error');
        return;
    }
    
    const expiryDate = expiryDateSelect.value;
    
    console.log('Submitting card create request with expiry date:', expiryDate);
    
    fetch('/cards/request-create', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `expiryDate=${encodeURIComponent(expiryDate)}`
    })
    .then(response => {
        console.log('Card create request response status:', response.status);
        return response.text();
    })
    .then(message => {
        console.log('Card create request response:', message);
        
        // –°–Ω–∞—á–∞–ª–∞ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        closeCardCreateRequestModal();
        
        // –ó–∞—Ç–µ–º –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        setTimeout(() => {
            showCustomNotification('‚úÖ –£—Å–ø–µ—Ö', message, 'success');
        }, 100);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
        const button = document.querySelector('.request-card-btn');
        if (button) {
            button.textContent = 'üì§ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω';
            button.disabled = true;
            button.classList.remove('btn-success');
            button.classList.add('btn-secondary');
        }
    })
    .catch(error => {
        console.error('Card create request error:', error);
        showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: ' + error.message, 'error');
    });
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('modal-overlay')) {
        closeCardCreateRequestModal();
    }
});

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
 */
function showCustomNotification(title, message, type) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ cards.js, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    if (typeof showStatusNotification === 'function') {
        showStatusNotification(message, type);
    } else {
        // –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è, –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ—Ç
        alert(title + ': ' + message);
    }
}
