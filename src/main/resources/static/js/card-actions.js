// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏, –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç
document.addEventListener('DOMContentLoaded', function() {
    initializeActivateButtons();
    initializeBlockButtons();
    initializeDeleteButtons();
});

function initializeActivateButtons() {
    const activateButtons = document.querySelectorAll('.activate-btn');
    
    activateButtons.forEach(button => {
        button.addEventListener('click', function() {
            const cardId = this.getAttribute('data-card-id');
            console.log('Activate button clicked for card:', cardId);
            activateCard(cardId);
        });
    });
}

function initializeBlockButtons() {
    const blockButtons = document.querySelectorAll('.block-btn');
    
    blockButtons.forEach(button => {
        button.addEventListener('click', function() {
            const cardId = this.getAttribute('data-card-id');
            const reason = this.getAttribute('data-reason');
            console.log('Block button clicked for card:', cardId, 'reason:', reason);
            blockCard(cardId, reason);
        });
    });
}

function initializeDeleteButtons() {
    const deleteButtons = document.querySelectorAll('.delete-btn');
    
    deleteButtons.forEach(button => {
        button.addEventListener('click', function() {
            const cardId = this.getAttribute('data-card-id');
            console.log('Delete button clicked for card:', cardId);
            deleteCard(cardId);
        });
    });
}

// –§—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã
function activateCard(cardId) {
    showCustomConfirm(
        'üîì –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–∞—Ä—Ç—ã',
        '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —ç—Ç—É –∫–∞—Ä—Ç—É?',
        '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å',
        '–û—Ç–º–µ–Ω–∞',
        () => {
            fetch(`/cards/${cardId}/activate`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                }
            })
            .then(response => {
                if (response.ok) {
                    return response.text();
                } else {
                    throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã');
                }
            })
            .then(message => {
                showCustomNotification('‚úÖ –£—Å–ø–µ—Ö', message, 'success');
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                setTimeout(() => {
                    window.location.reload();
                }, 1500);
            })
            .catch(error => {
                showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã: ' + error.message, 'error');
            });
        }
    );
}

// –§—É–Ω–∫—Ü–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–∞—Ä—Ç—ã
function blockCard(cardId, reason) {
    showCustomConfirm(
        'üîí –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–∞—Ä—Ç—ã',
        '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç—Ç—É –∫–∞—Ä—Ç—É?',
        '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å',
        '–û—Ç–º–µ–Ω–∞',
        () => {
            fetch(`/cards/${cardId}/block`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `reason=${encodeURIComponent(reason)}`
            })
            .then(response => {
                if (response.ok) {
                    return response.text();
                } else {
                    throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∫–∞—Ä—Ç—ã');
                }
            })
            .then(message => {
                showCustomNotification('‚úÖ –£—Å–ø–µ—Ö', message, 'success');
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                setTimeout(() => {
                    window.location.reload();
                }, 1500);
            })
            .catch(error => {
                showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∫–∞—Ä—Ç—ã: ' + error.message, 'error');
            });
        }
    );
}

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—ã
function deleteCard(cardId) {
    showCustomConfirm(
        'üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã',
        '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∫–∞—Ä—Ç—É? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!',
        '–£–¥–∞–ª–∏—Ç—å',
        '–û—Ç–º–µ–Ω–∞',
        () => {
            fetch(`/cards/${cardId}/delete`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                }
            })
            .then(response => {
                if (response.ok) {
                    return response.text();
                } else {
                    throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã');
                }
            })
            .then(message => {
                showCustomNotification('‚úÖ –£—Å–ø–µ—Ö', message, 'success');
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                setTimeout(() => {
                    window.location.reload();
                }, 1500);
            })
            .catch(error => {
                showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã: ' + error.message, 'error');
            });
        }
    );
}

