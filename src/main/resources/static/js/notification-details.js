/**
 * JavaScript –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–µ—Ç–∞–ª—è–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */

document.addEventListener('DOMContentLoaded', function() {
    initializeDetailsButtons();
});

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
 */
function initializeDetailsButtons() {
    const detailsButtons = document.querySelectorAll('.details-btn');
    detailsButtons.forEach(button => {
        button.addEventListener('click', function() {
            const notificationId = this.getAttribute('data-notification-id');
            const cardId = this.getAttribute('data-card-id');
            const userName = this.getAttribute('data-user-name');
            const cardNumber = this.getAttribute('data-card-number');
            const reason = this.getAttribute('data-reason');
            const notificationType = this.getAttribute('data-notification-type');
            
            showNotificationDetails(notificationId, cardId, userName, cardNumber, reason, notificationType);
        });
    });
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
function showNotificationDetails(notificationId, cardId, userName, cardNumber, reason, notificationType) {
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.className = 'notification-details-modal';
    modal.innerHTML = `
        <div class="notification-details-content">
            <div class="notification-details-header">
                <h3 id="modalTitle">üîç –î–µ—Ç–∞–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                <button type="button" class="notification-details-close" onclick="closeNotificationDetails()">&times;</button>
            </div>
            <div class="notification-details-body">
                <div class="detail-row">
                    <span class="detail-label">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</span>
                    <span class="detail-value">${userName}</span>
                </div>
                ${cardNumber ? `
                <div class="detail-row">
                    <span class="detail-label">–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:</span>
                    <span class="detail-value">${cardNumber}</span>
                </div>
                ` : ''}
                <div class="detail-row">
                    <span class="detail-label">–û–ø–∏—Å–∞–Ω–∏–µ:</span>
                    <span class="detail-value">${reason}</span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</span>
                    <span class="detail-value">${notificationId}</span>
                </div>
            </div>
            <div class="notification-details-actions" id="notificationActions">
                <!-- –ö–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è -->
                <button type="button" class="btn btn-secondary" onclick="closeNotificationDetails()">
                    –ó–∞–∫—Ä—ã—Ç—å
                </button>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É
    setModalTitleAndActions(notificationType, cardId, notificationId);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    setTimeout(() => {
        modal.classList.add('show');
    }, 10);
}

/**
 * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ—Ç–∞–ª–µ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
function closeNotificationDetails() {
    const modal = document.querySelector('.notification-details-modal');
    if (modal) {
        modal.classList.remove('show');
        setTimeout(() => {
            document.body.removeChild(modal);
        }, 300);
    }
}

/**
 * –ë–ª–æ–∫–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç—É –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
function blockCardFromNotification(cardId, notificationId) {
    showCustomConfirm(
        'üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–∞—Ä—Ç—ã',
        '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç—Ç—É –∫–∞—Ä—Ç—É?',
        '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å',
        '–û—Ç–º–µ–Ω–∞',
        () => {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∫–∞—Ä—Ç—ã
            fetch(`/cards/${cardId}/block`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `reason=–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`
            })
            .then(response => {
                if (response.ok) {
                    return response.text();
                } else {
                    throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∫–∞—Ä—Ç—ã');
                }
            })
            .then(message => {
                // –û—Ç–º–µ—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ
                return fetch(`/notifications/${notificationId}/process`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    }
                });
            })
            .then(response => {
                if (response.ok) {
                    showCustomNotification('‚úÖ –£—Å–ø–µ—Ö', '–ö–∞—Ä—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ', 'success');
                    closeNotificationDetails();
                    setTimeout(() => {
                        window.location.reload();
                    }, 1500);
                } else {
                    throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
                }
            })
            .catch(error => {
                showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∫–∞—Ä—Ç—ã: ' + error.message, 'error');
            });
        }
    );
}

/**
 * –ü–æ–ø–æ–ª–Ω—è–µ—Ç –∫–∞—Ä—Ç—É –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–Ω–∞ —Å—É–º–º—É –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
 */
function topupCardFromNotification(cardId, notificationId) {
    // –ü–æ–ª—É—á–∞–µ–º —Å—É–º–º—É –∏–∑ data-–∞—Ç—Ä–∏–±—É—Ç–∞ –∫–Ω–æ–ø–∫–∏
    const button = document.querySelector(`.details-btn[data-notification-id="${notificationId}"]`);
    let amount = button ? parseFloat(button.getAttribute('data-amount')) : 1000;
    
    console.log('Topup from notification - amount from data:', amount);
    console.log('Topup from notification - raw data-amount:', button ? button.getAttribute('data-amount') : 'button not found');
    
    // –ï—Å–ª–∏ —Å—É–º–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ NaN, –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (isNaN(amount) || amount <= 0) {
        const reason = button ? button.getAttribute('data-reason') : '';
        console.log('Topup from notification - extracting from reason:', reason);
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—É–º–º—É –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è (—Ñ–æ—Ä–º–∞—Ç: "–Ω–∞ —Å—É–º–º—É 500,00 —Ä—É–±.")
        const amountMatch = reason.match(/–Ω–∞ —Å—É–º–º—É ([\d,]+) —Ä—É–±\./);
        if (amountMatch) {
            // –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É –¥–ª—è parseFloat
            const amountStr = amountMatch[1].replace(',', '.');
            amount = parseFloat(amountStr);
            console.log('Topup from notification - extracted amount:', amount);
        } else {
            amount = 1000; // Fallback
            console.log('Topup from notification - using fallback amount:', amount);
        }
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å —Å—É–º–º–æ–π –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    showCustomConfirm(
        'üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã',
        `–ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫–∞—Ä—Ç—É –Ω–∞ ${amount} ‚ÇΩ?`,
        '–ü–æ–ø–æ–ª–Ω–∏—Ç—å',
        '–û—Ç–º–µ–Ω–∞',
        () => {
            submitTopupFromNotification(cardId, notificationId, amount);
        }
    );
}


/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
function submitTopupFromNotification(cardId, notificationId, amount) {
    console.log('Topup from notification - cardId:', cardId, 'notificationId:', notificationId, 'amount:', amount);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    fetch(`/cards/${cardId}/topup`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `amount=${amount}`
    })
    .then(response => {
        if (response.ok) {
            return response.text();
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã');
        }
    })
    .then(message => {
        console.log('Topup successful, marking notification as processed');
        // –û—Ç–º–µ—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ
        return fetch(`/notifications/${notificationId}/process`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            }
        });
    })
    .then(response => {
        if (response.ok) {
            console.log('Notification marked as processed');
            showCustomNotification('‚úÖ –£—Å–ø–µ—Ö', '–ö–∞—Ä—Ç–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∞ –Ω–∞ ' + amount + ' ‚ÇΩ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ', 'success');
            closeNotificationDetails();
            setTimeout(() => {
                window.location.reload();
            }, 1500);
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
        }
    })
    .catch(error => {
        showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã: ' + error.message, 'error');
    });
}

/**
 * –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç—É –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
function unblockCardFromNotification(cardId, notificationId) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    showCustomConfirm(
        'üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–∞—Ä—Ç—ã',
        '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É?',
        '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å',
        '–û—Ç–º–µ–Ω–∞',
        () => {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É
            fetch(`/cards/${cardId}/activate`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `reason=${encodeURIComponent('–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ')}`
            })
            .then(response => {
                if (response.ok) {
                    return response.text();
                } else {
                    throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∫–∞—Ä—Ç—ã');
                }
            })
            .then(message => {
                console.log('Unblock successful, marking notification as processed');
                // –û—Ç–º–µ—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ
                return fetch(`/notifications/${notificationId}/process`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    }
                });
            })
            .then(response => {
                if (response.ok) {
                    console.log('Notification marked as processed');
                    showCustomNotification('‚úÖ –£—Å–ø–µ—Ö', '–ö–∞—Ä—Ç–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ', 'success');
                    closeNotificationDetails();
                    setTimeout(() => {
                        window.location.reload();
                    }, 1500);
                } else {
                    throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
                }
            })
            .catch(error => {
                showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∫–∞—Ä—Ç—ã: ' + error.message, 'error');
            });
        }
    );
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
function setModalTitleAndActions(notificationType, cardId, notificationId) {
    const titleElement = document.getElementById('modalTitle');
    const actionsContainer = document.getElementById('notificationActions');
    
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–Ω–æ–ø–æ–∫ (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É "–ó–∞–∫—Ä—ã—Ç—å")
    const closeButton = actionsContainer.querySelector('button[onclick="closeNotificationDetails()"]');
    actionsContainer.innerHTML = '';
    actionsContainer.appendChild(closeButton);
    
    switch (notificationType) {
        case 'CARD_BLOCK_REQUEST':
            titleElement.textContent = 'üîç –î–µ—Ç–∞–ª–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É';
            addBlockButton(cardId, notificationId);
            break;
            
        case 'CARD_TOPUP_REQUEST':
            titleElement.textContent = 'üîç –î–µ—Ç–∞–ª–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ';
            addTopupButton(cardId, notificationId);
            break;
            
        case 'CARD_UNBLOCK_REQUEST':
            titleElement.textContent = 'üîç –î–µ—Ç–∞–ª–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É';
            addUnblockButton(cardId, notificationId);
            break;
            
        case 'CARD_CREATE_REQUEST':
            titleElement.textContent = 'üîç –î–µ—Ç–∞–ª–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã';
            addCreateCardButton(notificationId);
            break;
            
        default:
            titleElement.textContent = 'üîç –î–µ—Ç–∞–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è';
            break;
    }
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–∞—Ä—Ç—ã
 */
function addBlockButton(cardId, notificationId) {
    const actionsContainer = document.getElementById('notificationActions');
    const blockButton = document.createElement('button');
    blockButton.type = 'button';
    blockButton.className = 'btn btn-warning';
    blockButton.innerHTML = 'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É';
    blockButton.onclick = () => blockCardFromNotification(cardId, notificationId);
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π "–ó–∞–∫—Ä—ã—Ç—å"
    const closeButton = actionsContainer.querySelector('button[onclick="closeNotificationDetails()"]');
    actionsContainer.insertBefore(blockButton, closeButton);
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç—ã
 */
function addTopupButton(cardId, notificationId) {
    const actionsContainer = document.getElementById('notificationActions');
    const topupButton = document.createElement('button');
    topupButton.type = 'button';
    topupButton.className = 'btn btn-success';
    topupButton.innerHTML = 'üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫–∞—Ä—Ç—É';
    topupButton.onclick = () => topupCardFromNotification(cardId, notificationId);
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π "–ó–∞–∫—Ä—ã—Ç—å"
    const closeButton = actionsContainer.querySelector('button[onclick="closeNotificationDetails()"]');
    actionsContainer.insertBefore(topupButton, closeButton);
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–∞—Ä—Ç—ã
 */
function addUnblockButton(cardId, notificationId) {
    const actionsContainer = document.getElementById('notificationActions');
    const unblockButton = document.createElement('button');
    unblockButton.type = 'button';
    unblockButton.className = 'btn btn-info';
    unblockButton.innerHTML = 'üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É';
    unblockButton.onclick = () => unblockCardFromNotification(cardId, notificationId);
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π "–ó–∞–∫—Ä—ã—Ç—å"
    const closeButton = actionsContainer.querySelector('button[onclick="closeNotificationDetails()"]');
    actionsContainer.insertBefore(unblockButton, closeButton);
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
 */
function addCreateCardButton(notificationId) {
    const actionsContainer = document.getElementById('notificationActions');
    const createButton = document.createElement('button');
    createButton.type = 'button';
    createButton.className = 'btn btn-primary';
    createButton.innerHTML = '‚ûï –°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç—É';
    createButton.onclick = () => createCardFromNotification(notificationId);
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π "–ó–∞–∫—Ä—ã—Ç—å"
    const closeButton = actionsContainer.querySelector('button[onclick="closeNotificationDetails()"]');
    actionsContainer.insertBefore(createButton, closeButton    );
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∫–∞—Ä—Ç—É –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–¥–ª—è –∞–¥–º–∏–Ω–∞)
 */
function createCardFromNotification(notificationId) {
    const button = document.querySelector(`.details-btn[data-notification-id="${notificationId}"]`);
    const userName = button ? button.getAttribute('data-user-name') : '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è';
    
    showCustomConfirm(
        '‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã',
        `–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É –¥–ª—è ${userName}?`,
        '–°–æ–∑–¥–∞—Ç—å',
        '–û—Ç–º–µ–Ω–∞',
        () => {
            // –ü–æ–ª—É—á–∞–µ–º email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            const reason = button ? button.getAttribute('data-reason') : '';
            const userEmailMatch = reason.match(/–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\s+(.+?)\s+–∑–∞–ø—Ä–æ—Å–∏–ª/);
            
            if (!userEmailMatch) {
                showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
                return;
            }
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
            const expiryMatch = reason.match(/–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:\s+(\d{2}\/\d{2})/);
            const expiryDate = expiryMatch ? expiryMatch[1] : '12/26';
            
            // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É —á–µ—Ä–µ–∑ API —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç
            const createCardData = {
                ownerEmail: getUserEmailFromNotification(notificationId),
                expiryDate: expiryDate
            };
            
            fetch('/api/cards', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(createCardData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã');
                }
                return response.json();
            })
            .then(card => {
                // –û—Ç–º–µ—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ
                return fetch(`/notifications/${notificationId}/process`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
            })
            .then(processResponse => {
                if (!processResponse.ok) {
                    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ—Ç–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ');
                }
                showCustomNotification('‚úÖ –£—Å–ø–µ—Ö', '–ö–∞—Ä—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ', 'success');
                closeNotificationDetails();
                setTimeout(() => {
                    window.location.reload();
                }, 1500);
            })
            .catch(error => {
                console.error('Error creating card:', error);
                showCustomNotification('‚ùå –û—à–∏–±–∫–∞', '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ä—Ç—ã: ' + error.message, 'error');
            });
        }
    );
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
function getUserEmailFromNotification(notificationId) {
    // –ü–æ–ª—É—á–∞–µ–º email –∏–∑ data-–∞—Ç—Ä–∏–±—É—Ç–∞ –∫–Ω–æ–ø–∫–∏
    const button = document.querySelector(`.details-btn[data-notification-id="${notificationId}"]`);
    if (!button) {
        return 'user@git.com'; // fallback
    }
    
    const userEmail = button.getAttribute('data-user-email');
    return userEmail || 'user@git.com'; // fallback –µ—Å–ª–∏ email –Ω–µ –Ω–∞–π–¥–µ–Ω
}


// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('modal-overlay')) {
        closeNotificationDetails();
    }
});
