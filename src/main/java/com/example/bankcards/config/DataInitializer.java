package com.example.bankcards.config;

import com.example.bankcards.entity.User;
import com.example.bankcards.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–∞–Ω–Ω—ã—Ö - —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 */
@Component
public class DataInitializer implements CommandLineRunner {

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private PasswordEncoder passwordEncoder;

    @Override
    public void run(String... args) throws Exception {
        long userCount = userRepository.count();
        System.out.println("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: –Ω–∞–π–¥–µ–Ω–æ " + userCount + " –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π");
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ
        if (userCount == 0) {
            System.out.println("üìù –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞, —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...");
            createDefaultUsers();
        } else {
            System.out.println("‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é");
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
            boolean adminExists = userRepository.findByEmail("admin@git.com").isPresent();
            boolean userExists = userRepository.findByEmail("user@git.com").isPresent();
            
            System.out.println("   –ê–¥–º–∏–Ω (admin@git.com): " + (adminExists ? "‚úÖ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" : "‚ùå –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"));
            System.out.println("   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (user@git.com): " + (userExists ? "‚úÖ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" : "‚ùå –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"));
        }
    }

    private void createDefaultUsers() {
        try {
            // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
            User admin = new User();
            admin.setEmail("admin@git.com");
            admin.setUsername("admin@git.com");
            String adminPasswordHash = passwordEncoder.encode("admin1");
            admin.setPassword(adminPasswordHash);
            admin.setFirstName("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä");
            admin.setLastName("–°–∏—Å—Ç–µ–º—ã");
            admin.setRole(User.Role.ADMIN);
            userRepository.save(admin);
            System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω: admin@git.com");

            // –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            User user = new User();
            user.setEmail("user@git.com");
            user.setUsername("user@git.com");
            String userPasswordHash = passwordEncoder.encode("user12");
            user.setPassword(userPasswordHash);
            user.setFirstName("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å");
            user.setLastName("–¢–µ—Å—Ç–æ–≤—ã–π");
            user.setRole(User.Role.USER);
            userRepository.save(user);
            System.out.println("‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: user@git.com");

            System.out.println();
            System.out.println("üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!");
            System.out.println("üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:");
            System.out.println("   üëë –ê–¥–º–∏–Ω: admin@git.com / admin1");
            System.out.println("   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: user@git.com / user12");
            System.out.println();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞—Ä–æ–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç
            boolean adminPasswordWorks = passwordEncoder.matches("admin1", adminPasswordHash);
            boolean userPasswordWorks = passwordEncoder.matches("user12", userPasswordHash);
            
            System.out.println("üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª–µ–π:");
            System.out.println("   –ê–¥–º–∏–Ω –ø–∞—Ä–æ–ª—å: " + (adminPasswordWorks ? "‚úÖ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π" : "‚ùå –æ—à–∏–±–∫–∞"));
            System.out.println("   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∞—Ä–æ–ª—å: " + (userPasswordWorks ? "‚úÖ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π" : "‚ùå –æ—à–∏–±–∫–∞"));
            
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
